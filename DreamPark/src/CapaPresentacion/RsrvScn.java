/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package CapaPresentacion;

import CapaNegocios.NEvento;
import CapaNegocios.NProveedor;
import CapaNegocios.NReservacion;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jfpal
 */
public class RsrvScn extends javax.swing.JFrame {
    
    private static RsrvScn rscn = new RsrvScn();
    
    /**
     * Creates new form RsrvScn
     */
    private RsrvScn() {
        initComponents();
        this.IngBtn.setVisible(false);
        this.SaveBtn.setVisible(false);
        this.ElimBtn.setVisible(false);
        this.EditBtn.setVisible(false);
        this.CancelBtn.setVisible(false);
        this.comChck.setVisible(false);
        GetDataClientes();
        //GetDataActivos();
        //GetDataCancelados();
        //GetDataCompletados();
        GetDataTematicas();
        GetDataTipos();
        //String dat =this.fchDate.getDateFormatString();
        this.fchDate.setDateFormatString("yyyy-MM-dd");
        this.agrBtn.setVisible(false);
        
    }
    
    public static RsrvScn getRscn() {
        return rscn;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fchDate = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rsrTbl = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        fltrCmb = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descTxt = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        prcTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        teCmb = new javax.swing.JComboBox();
        CltCmb = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        itmTbl = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        agrBtn = new javax.swing.JButton();
        EditBtn = new javax.swing.JButton();
        SaveBtn = new javax.swing.JButton();
        ElimBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();
        CrearBtn = new javax.swing.JButton();
        IngBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        salTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        npTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        temCmb = new javax.swing.JComboBox();
        comChck = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        fchDate.setEnabled(false);

        jLabel1.setText("RESERVACIONES");

        rsrTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Cliente", "Descripcion", "Costo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rsrTbl.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        rsrTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rsrTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(rsrTbl);
        if (rsrTbl.getColumnModel().getColumnCount() > 0) {
            rsrTbl.getColumnModel().getColumn(0).setResizable(false);
            rsrTbl.getColumnModel().getColumn(1).setResizable(false);
            rsrTbl.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel2.setText("Fecha");

        fltrCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Activos", "Completados", "Cancelados" }));
        fltrCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fltrCmbActionPerformed(evt);
            }
        });

        jLabel3.setText("Filtrar");

        jLabel4.setText("Descripcion");

        jScrollPane2.setEnabled(false);

        descTxt.setColumns(20);
        descTxt.setRows(5);
        descTxt.setEnabled(false);
        jScrollPane2.setViewportView(descTxt);

        jLabel5.setText("Precio");

        prcTxt.setEnabled(false);

        jLabel6.setText("Cliente");

        jLabel7.setText("Tipo de Evento");

        teCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "<Editar>" }));
        teCmb.setEnabled(false);
        teCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teCmbActionPerformed(evt);
            }
        });

        CltCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "<Editar>" }));
        CltCmb.setEnabled(false);
        CltCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CltCmbActionPerformed(evt);
            }
        });

        itmTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Descripcion", "Tipo", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(itmTbl);
        if (itmTbl.getColumnModel().getColumnCount() > 0) {
            itmTbl.getColumnModel().getColumn(0).setResizable(false);
            itmTbl.getColumnModel().getColumn(1).setResizable(false);
            itmTbl.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel8.setText("Items");

        agrBtn.setText("Agregar");
        agrBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agrBtnActionPerformed(evt);
            }
        });

        EditBtn.setText("EDITAR");
        EditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditBtnActionPerformed(evt);
            }
        });

        SaveBtn.setText("GUARDAR");
        SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBtnActionPerformed(evt);
            }
        });

        ElimBtn.setText("CANCELAR");
        ElimBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ElimBtnActionPerformed(evt);
            }
        });

        CancelBtn.setText("REGRESAR");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        CrearBtn.setText("CREAR");
        CrearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearBtnActionPerformed(evt);
            }
        });

        IngBtn.setText("INGRESAR");
        IngBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IngBtnActionPerformed(evt);
            }
        });

        jLabel9.setText("Salon");

        salTxt.setEnabled(false);

        jLabel10.setText("Numero de personas:");

        npTxt.setEnabled(false);

        jLabel11.setText("Tematica");

        temCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "<Editar>" }));
        temCmb.setEnabled(false);
        temCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temCmbActionPerformed(evt);
            }
        });

        comChck.setText("Completado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(fltrCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addGap(280, 280, 280))
                                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(fchDate, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(npTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addGap(54, 54, 54)
                                            .addComponent(salTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(prcTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(agrBtn))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(CrearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(29, 29, 29)
                                                        .addComponent(SaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(IngBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(EditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(ElimBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(jLabel7)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(teCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel6)
                                                        .addGap(103, 103, 103)
                                                        .addComponent(CltCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(jLabel11)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(temCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addComponent(comChck))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(288, 288, 288)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(fchDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prcTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(salTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(npTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fltrCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(CltCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(teCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(temCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(comChck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(agrBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(IngBtn)
                            .addComponent(CrearBtn)
                            .addComponent(SaveBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CancelBtn)
                            .addComponent(ElimBtn)
                            .addComponent(EditBtn))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void EditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBtnActionPerformed
        // TODO add your handling code here:
        this.fchDate.setEnabled(true);
        this.descTxt.enable(true);
        this.prcTxt.enable(true);
        this.salTxt.enable(true);
        this.npTxt.enable(true);
        this.CltCmb.enable(true);
        this.teCmb.enable(true);
        this.temCmb.enable(true);
        this.agrBtn.setVisible(true);
        this.itmTbl.enable(true);
        this.SaveBtn.setVisible(true);
        this.EditBtn.setVisible(false);
        this.ElimBtn.setVisible(false);
        
        
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        java.util.Date date = new java.util.Date();
        Date date2 = null;
        //String dat = dateFormat.format(date);
        SimpleDateFormat ft = new SimpleDateFormat ("yyyy-MM-dd");
        int an = this.fchDate.getDate().getYear()+1900;
        int mon=this.fchDate.getDate().getMonth()+1;
        int day =this.fchDate.getDate().getDate();
        String fch = ""+an+"-0"+mon+"-"+day;
        try {
            date2= ft.parse(fch);
        } catch (ParseException ex) {
            Logger.getLogger(RsrvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
        int comp = date.compareTo(date2);
        if(comp<0){
            this.comChck.setVisible(false);
            
        }
        if(comp==0){
            this.comChck.setVisible(true);
        }
        if(comp>0){
            this.comChck.setVisible(true);
            
        }
        
    }//GEN-LAST:event_EditBtnActionPerformed
    
    private void SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBtnActionPerformed
        // TODO add your handling code here:
        SaveData();
        this.EditBtn.setVisible(false);
        this.ElimBtn.setVisible(false);
        this.CancelBtn.setVisible(false);
        this.CrearBtn.setVisible(true);
        this.fchDate.setDateFormatString("yyyy-MM-dd");
        this.fchDate.enable(false);
        this.descTxt.enable(false);
        this.prcTxt.enable(false);
        this.salTxt.enable(false);
        this.npTxt.enable(false);
        this.CltCmb.enable(false);
        this.teCmb.enable(false);
        this.temCmb.enable(false);
        this.agrBtn.setVisible(false);
        this.itmTbl.enable(false);
        if(this.CrearBtn.isEnabled()){
            this.CancelBtn.setVisible(false);
        }
        else{
            this.CancelBtn.setVisible(true);
        }
        DefaultTableModel model = (DefaultTableModel)this.itmTbl.getModel();
        model.setRowCount(0);
        this.itmTbl.setModel(model);
        
    }//GEN-LAST:event_SaveBtnActionPerformed
    
    private void ElimBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ElimBtnActionPerformed
        DeleteData();
        this.fchDate.setEnabled(true);
        this.fchDate.setDateFormatString("yyyy-MM-dd");
        this.EditBtn.setVisible(false);
        this.ElimBtn.setVisible(false);
        this.CancelBtn.setVisible(false);
        this.CrearBtn.setVisible(true);
        
        
    }//GEN-LAST:event_ElimBtnActionPerformed
    
    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        // TODO add your handling code here:
        boolean flag=true;
        if(this.IngBtn.isVisible()&&!this.CrearBtn.isVisible()&&!this.EditBtn.isVisible()&&!this.ElimBtn.isVisible()){
            this.CrearBtn.setVisible(true);
            this.IngBtn.setVisible(false);
            this.CancelBtn.setVisible(false);
            this.comChck.setVisible(false);
            this.fchDate.setEnabled(false);
            this.descTxt.enable(false);
            this.prcTxt.enable(false);
            this.salTxt.enable(false);
            this.npTxt.enable(false);
            this.CltCmb.enable(false);
            this.teCmb.enable(false);
            this.temCmb.enable(false);
            this.agrBtn.setVisible(false);
            this.itmTbl.enable(false);
            this.fchDate.setDateFormatString("yyyy-MM-dd");
        }
        if(!this.EditBtn.isVisible()&&this.SaveBtn.isVisible()&&!this.ElimBtn.isVisible()){
            this.EditBtn.setVisible(true);
            this.ElimBtn.setVisible(true);
            
            this.fchDate.setEnabled(false);
            this.descTxt.enable(false);
            this.prcTxt.enable(false);
            this.salTxt.enable(false);
            this.npTxt.enable(false);
            this.CltCmb.enable(false);
            this.teCmb.enable(false);
            this.temCmb.enable(false);
            this.agrBtn.setVisible(false);
            this.itmTbl.enable(false);
            this.SaveBtn.setVisible(false);
            this.comChck.setVisible(false);
            this.fchDate.setDateFormatString("yyyy-MM-dd");
            flag=false;
        }
        if(this.EditBtn.isVisible()&&this.ElimBtn.isVisible()&&!this.SaveBtn.isVisible()&&flag){
            this.EditBtn.setVisible(false);
            this.fchDate.setEnabled(false);
            this.ElimBtn.setVisible(false);
            this.CrearBtn.setVisible(true);
            this.comChck.setVisible(false);
            this.CancelBtn.setVisible(false);
            this.fchDate.setDateFormatString("yyyy-MM-dd");
            this.descTxt.setText("");
            this.prcTxt.setText("");
            this.salTxt.setText("");
            this.npTxt.setText("");
            this.CltCmb.setSelectedIndex(0);
            this.teCmb.setSelectedIndex(0);
            this.temCmb.setSelectedIndex(0);
            this.agrBtn.setVisible(false);
            DefaultTableModel model = (DefaultTableModel)this.itmTbl.getModel();
            model.setRowCount(0);
            this.itmTbl.setModel(model);
            
        }
    }//GEN-LAST:event_CancelBtnActionPerformed
    
    private void CrearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearBtnActionPerformed
        
        this.IngBtn.setVisible(true);
        this.fchDate.setEnabled(true);
        this.descTxt.enable(true);
        this.prcTxt.enable(true);
        this.salTxt.enable(true);
        this.npTxt.enable(true);
        this.CltCmb.enable(true);
        this.teCmb.enable(true);
        this.temCmb.enable(true);
        this.agrBtn.setVisible(true);
        this.itmTbl.enable(true);
        this.CrearBtn.setVisible(false);
        this.CancelBtn.setVisible(true);
        this.fchDate.setDateFormatString("yyyy-MM-dd");
        this.descTxt.setText("");
        this.prcTxt.setText("");
        this.salTxt.setText("");
        this.npTxt.setText("");
        this.CltCmb.setSelectedIndex(0);
        this.teCmb.setSelectedIndex(0);
        this.temCmb.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel)this.itmTbl.getModel();
        model.setRowCount(0);
        this.itmTbl.setModel(model);
    }//GEN-LAST:event_CrearBtnActionPerformed
    
    private void IngBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IngBtnActionPerformed
        PushData();
        this.fchDate.enable(false);
        this.descTxt.enable(false);
        this.prcTxt.enable(false);
        this.salTxt.enable(false);
        this.npTxt.enable(false);
        this.CltCmb.enable(false);
        this.teCmb.enable(false);
        this.temCmb.enable(false);
        this.agrBtn.setVisible(false);
        this.itmTbl.enable(false);
        if(this.CrearBtn.isEnabled()){
            this.CancelBtn.setVisible(false);
        }
        else{
            this.CancelBtn.setVisible(true);
        }
        
    }//GEN-LAST:event_IngBtnActionPerformed
    
    private void CltCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CltCmbActionPerformed
        // TODO add your handling code here:
        CltScn clt = CltScn.getClt();
        
        
        this.CltCmb.addActionListener(new ActionListener() {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                JComboBox<String> combo = (JComboBox<String>) e.getSource();
                String selectedBook = (String) combo.getSelectedItem();
                
                if(selectedBook.equals("<Editar>")){
                    
                    clt.setVisible(true);
                }
                
            }
        });
        
    }//GEN-LAST:event_CltCmbActionPerformed
    
    private void teCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teCmbActionPerformed
        // TODO add your handling code here:
        TipoScn tscn = TipoScn.getTpsc();;
        this.teCmb.addActionListener(new ActionListener() {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                JComboBox<String> combo = (JComboBox<String>) e.getSource();
                String selectedBook = (String) combo.getSelectedItem();
                
                if(selectedBook.equals("<Editar>")){
                    
                    tscn.setVisible(true);
                }
            }
        });
    }//GEN-LAST:event_teCmbActionPerformed
    
    private void temCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temCmbActionPerformed
        // TODO add your handling code here:
        
        this.temCmb.addActionListener(new ActionListener() {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                JComboBox<String> combo = (JComboBox<String>) e.getSource();
                String selectedBook = (String) combo.getSelectedItem();
                
                if(selectedBook.equals("<Editar>")){
                    TematicaScn tmscn = TematicaScn.getTmsc();
                    tmscn.setVisible(true);
                }
            }
        });
    }//GEN-LAST:event_temCmbActionPerformed
    
    private void fltrCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fltrCmbActionPerformed
        // TODO add your handling code here:
        this.EditBtn.setVisible(false);
        this.ElimBtn.setVisible(false);
        this.CrearBtn.setVisible(true);
        this.comChck.setVisible(false);
        this.CancelBtn.setVisible(false);
        this.fchDate.setDateFormatString("yyyy-MM-dd");
        this.descTxt.setText("");
        this.prcTxt.setText("");
        this.salTxt.setText("");
        this.npTxt.setText("");
        this.CltCmb.setSelectedIndex(0);
        this.teCmb.setSelectedIndex(0);
        this.temCmb.setSelectedIndex(0);
        this.agrBtn.setVisible(false);
        DefaultTableModel model = (DefaultTableModel)this.itmTbl.getModel();
        model.setRowCount(0);
        this.itmTbl.setModel(model);
        this.fltrCmb.addActionListener(new ActionListener() {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                JComboBox<String> combo = (JComboBox<String>) e.getSource();
                String selectedBook = (String) combo.getSelectedItem();
                
                
                if(selectedBook.equals("Activos")){
                    GetDataActivos();
                    
                    
                }
                if(selectedBook.equals("Completados")){
                    GetDataCompletados();
                }
                if(selectedBook.equals("Cancelados")){
                    GetDataCancelados();
                }
            }
        });
    }//GEN-LAST:event_fltrCmbActionPerformed
    
    private void rsrTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rsrTblMouseClicked
        // TODO add your handling code here:
        ResultSet rs = null;
        
        Date date = null;
        if(this.fltrCmb.getSelectedItem().equals("Cancelados")||this.fltrCmb.getSelectedItem().equals("Completados")){
            this.CrearBtn.setVisible(true);
            this.EditBtn.setVisible(false);
            this.ElimBtn.setVisible(false);
            this.CancelBtn.setVisible(false);
        }
        else{
            this.CrearBtn.setVisible(false);
            this.EditBtn.setVisible(true);
            this.ElimBtn.setVisible(true);
            this.CancelBtn.setVisible(true);
        }
        
        int index = this.rsrTbl.convertRowIndexToModel(this.rsrTbl.getSelectedRow());
        //(Date) this.rsrTbl.getModel().getValueAt(index, 1)
        DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        try {
            date = formatter.parse((String)this.rsrTbl.getModel().getValueAt(index, 0));
        } catch (ParseException ex) {
            Logger.getLogger(RsrvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.fchDate.setDate(date);
        this.descTxt.setText((String)this.rsrTbl.getModel().getValueAt(index, 2));
        this.prcTxt.setText(""+this.rsrTbl.getModel().getValueAt(index, 3));
        
        ComboBoxModel cmbmodel = this.CltCmb.getModel();
        int size = cmbmodel.getSize();
        for(int i=0;i<size;i++) {
            Object element = cmbmodel.getElementAt(i);
            if(element.equals(this.rsrTbl.getModel().getValueAt(index, 1))){
                this.CltCmb.setSelectedIndex(i);
            }
        }
        try {
            String client = (String)this.rsrTbl.getModel().getValueAt(index, 1);
            String[] split =client.split(" ");
            String fech=(String)this.rsrTbl.getModel().getValueAt(index, 0);
            rs = new NReservacion().InfoEvento(fech, split[0], split[1]);
            
            
            if(rs.next()){
                
                String pr = rs.getString("salon");
                this.salTxt.setText(pr);
                this.npTxt.setText(String.valueOf(rs.getInt("numero")));
                ComboBoxModel cmbmodel2 = this.temCmb.getModel();
                ComboBoxModel cmbmodel3 = this.teCmb.getModel();
                int size2 = cmbmodel2.getSize();
                int size3 = cmbmodel3.getSize();
                for(int i=0;i<size2;i++) {
                    Object element = cmbmodel2.getElementAt(i);
                    if(element.equals(rs.getString("tematica"))){
                        this.temCmb.setSelectedIndex(i);
                    } else {
                    }
                }
                for(int i=0;i<size3;i++) {
                    Object element = cmbmodel3.getElementAt(i);
                    if(element.equals(rs.getString("tipo"))){
                        this.teCmb.setSelectedIndex(i);
                    } else {
                    }
                }
            }
            //this.rsrTbl.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_rsrTblMouseClicked
    
    private void agrBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agrBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agrBtnActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RsrvScn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RsrvScn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RsrvScn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RsrvScn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RsrvScn().setVisible(true);
            }
        });
    }
    
    protected void PushData(){
        try{
            String rpta="";
            String rpta2="";
            
            
            
            if((this.descTxt.getText().equals(""))||
                    (this.prcTxt.getText().equals(""))||
                    (this.salTxt.getText().equals(""))||
                    (this.npTxt.getText().equals(""))||
                    ((this.CltCmb.getSelectedIndex()==0)&&(this.CltCmb.getSelectedIndex()==1))||
                    ((this.teCmb.getSelectedIndex()==0)&&(this.teCmb.getSelectedIndex()==1))||
                    ((this.temCmb.getSelectedIndex()==0)&&(this.temCmb.getSelectedIndex()==1))||(this.fchDate.getCalendar() == null)){
                if(this.descTxt.getText().equals("")){
                    JOptionPane.showMessageDialog(new JFrame(),"No ha ingresado datos en el campo Descripcion. Vuelva a intentar","Error",JOptionPane.ERROR_MESSAGE);
                    
                }
                if(this.prcTxt.getText().equals("")){
                    JOptionPane.showMessageDialog(new JFrame(),"No ha ingresado datos en el campo precio. Vuelva a intentar","Error",JOptionPane.ERROR_MESSAGE);
                    
                }
                if(this.salTxt.getText().equals("")){
                    JOptionPane.showMessageDialog(new JFrame(),"No ha ingresado datos en el campo Salon. Vuelva a intentar","Error",JOptionPane.ERROR_MESSAGE);
                    
                }
                if(this.npTxt.getText().equals("")){
                    JOptionPane.showMessageDialog(new JFrame(),"No ha ingresado datos en el campo Numero de personas. Vuelva a intentar","Error",JOptionPane.ERROR_MESSAGE);
                    
                }
                if((this.CltCmb.getSelectedIndex()==0)&&(this.CltCmb.getSelectedIndex()==1)){
                    JOptionPane.showMessageDialog(new JFrame(),"No ha seleccionado un cliente. Vuelva a intentar","Error",JOptionPane.ERROR_MESSAGE);
                    
                }
                if((this.teCmb.getSelectedIndex()==0)&&(this.teCmb.getSelectedIndex()==1)){
                    JOptionPane.showMessageDialog(new JFrame(),"No ha seleccionado tipo de evento. Vuelva a intentar","Error",JOptionPane.ERROR_MESSAGE);
                    
                }
                if((this.temCmb.getSelectedIndex()==0)&&(this.temCmb.getSelectedIndex()==1)){
                    JOptionPane.showMessageDialog(new JFrame(),"No ha selccionado tematica. Vuelva a intentar","Error",JOptionPane.ERROR_MESSAGE);
                    
                }
            }
            else{
                int idTem = NEvento.BuscarTematicaNombre(this.temCmb.getSelectedItem().toString());
                int idTip = NEvento.BuscarTipoNombre(this.teCmb.getSelectedItem().toString());
                int idEstE = NEvento.BuscarEstadoNombre("Activado");
                int an = this.fchDate.getDate().getYear()+1900;
                int mon=this.fchDate.getDate().getMonth()+1;
                int day =this.fchDate.getDate().getDate();
                String fch = ""+an+"-0"+mon+"-"+day;
                String salon=this.salTxt.getText();
                
                int np = Integer.parseInt(this.npTxt.getText());
                String desc=this.descTxt.getText();
                double pr = Double.parseDouble(this.prcTxt.getText());
                rpta2=NEvento.insertar(fch,salon,np, desc,pr,idTem, idTip, idEstE);
                int idEv=NReservacion.BuscarEvento(fch,desc,salon,np,pr);
                String Clt=this.CltCmb.getSelectedItem().toString();
                String[] split=Clt.split(" ");
                int idC = NReservacion.BuscarCliente(split[0], split[1]);
                int idEstR=NReservacion.BuscarEstadoReservacion("Activado");
                
                
                rpta = NReservacion.insertar(fch,
                        desc,
                        pr, idEv,
                        idC, idEstR);
                if (rpta.equals("OK")&&rpta2.equals("OK")){
                    JOptionPane.showMessageDialog(new JFrame(),"Ingresado con exito...");
                    this.fchDate.setDateFormatString("yyyy-MM-dd");
                    this.descTxt.setText("");
                    this.prcTxt.setText("");
                    this.salTxt.setText("");
                    this.npTxt.setText("");
                    this.CltCmb.setSelectedIndex(0);
                    this.teCmb.setSelectedIndex(0);
                    this.temCmb.setSelectedIndex(0);
                    DefaultTableModel model = (DefaultTableModel)this.itmTbl.getModel();
                    model.setRowCount(0);
                    this.itmTbl.setModel(model);
                    this.CrearBtn.setVisible(true);
                    this.IngBtn.setVisible(false);
                }
                else{
                    JOptionPane.showMessageDialog(new JFrame(),rpta);
                    
                }
                
                
            }
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(new JFrame(),e.getMessage()+e.getStackTrace());
            
        }
        GetDataActivos();
    }
    
    protected void SaveData(){
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        java.util.Date date = new java.util.Date();
        Date date2 = null;
        //String dat = dateFormat.format(date);
        SimpleDateFormat ft = new SimpleDateFormat ("yyyy-MM-dd");
        int an = this.fchDate.getDate().getYear()+1900;
        int mon=this.fchDate.getDate().getMonth()+1;
        int day =this.fchDate.getDate().getDate();
        String fch = ""+an+"-0"+mon+"-"+day;
        try {
            date2= ft.parse(fch);
        } catch (ParseException ex) {
            Logger.getLogger(RsrvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
        int comp = date.compareTo(date2);
        if(comp<0){
            SaveAct();
        }
        if(comp==0){
            SaveCompSd();
        }
        if(comp>0){
            this.comChck.setSelected(true);
            SaveCompPd();
            
        }
        
        
    }
    
    protected void SaveCompPd(){
        if(comChck.isSelected()){
            String rpta="";
            String rpta2="";
            try {
                String desc=this.descTxt.getText();
                int idTem = NEvento.BuscarTematicaNombre(this.temCmb.getSelectedItem().toString());
                int idTip = NEvento.BuscarTipoNombre(this.teCmb.getSelectedItem().toString());
                int idEstE = NEvento.BuscarEstadoNombre("Completado");
                int an = this.fchDate.getDate().getYear()+1900;
                int mon=this.fchDate.getDate().getMonth()+1;
                int day =this.fchDate.getDate().getDate();
                String fch = ""+an+"-0"+mon+"-"+day;
                String salon=this.salTxt.getText();
                int np = Integer.parseInt(this.npTxt.getText());
                double pr = Double.parseDouble(this.prcTxt.getText());
                int idEv=NReservacion.BuscarEvento(fch,desc,salon,np,pr);
                rpta2=NEvento.Editar(idEv,fch,salon,np, desc,pr,idTem, idTip, idEstE);
                String Clt=this.CltCmb.getSelectedItem().toString();
                String[] split=Clt.split(" ");
                int idC = NReservacion.BuscarCliente(split[0], split[1]);
                int idEstR=NReservacion.BuscarEstadoReservacion("Completado");
                int idR = NReservacion.BuscarIdReservacion(idEv, fch, idC);
                
                rpta = NReservacion.Editar(idR,fch,
                        desc,
                        pr, idEv,
                        idC, idEstR);
                if (rpta.equals("OK")&&rpta2.equals("OK")){
                    JOptionPane.showMessageDialog(new JFrame(),"Editado con exito...");
                    this.fchDate.setDateFormatString("yyyy-MM-dd");
                    this.descTxt.setText("");
                    this.prcTxt.setText("");
                    this.salTxt.setText("");
                    this.npTxt.setText("");
                    this.CltCmb.setSelectedIndex(0);
                    this.teCmb.setSelectedIndex(0);
                    this.temCmb.setSelectedIndex(0);
                    DefaultTableModel model = (DefaultTableModel)this.itmTbl.getModel();
                    model.setRowCount(0);
                    this.itmTbl.setModel(model);
                    this.CrearBtn.setVisible(true);
                    this.IngBtn.setVisible(false);
                    this.EditBtn.setVisible(true);
                    this.ElimBtn.setVisible(true);
                    this.SaveBtn.setVisible(false);
                }
                else{
                    JOptionPane.showMessageDialog(new JFrame(),rpta);
                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }
    
    protected void SaveCompSd(){
        if(comChck.isSelected()){
            
            String rpta="";
            String rpta2="";
            try {
                String desc=this.descTxt.getText();
                int idTem = NEvento.BuscarTematicaNombre(this.temCmb.getSelectedItem().toString());
                int idTip = NEvento.BuscarTipoNombre(this.teCmb.getSelectedItem().toString());
                int idEstE = NEvento.BuscarEstadoNombre("Completado");
                int an = this.fchDate.getDate().getYear()+1900;
                int mon=this.fchDate.getDate().getMonth()+1;
                int day =this.fchDate.getDate().getDate();
                String fch = ""+an+"-0"+mon+"-"+day;
                String salon=this.salTxt.getText();
                int np = Integer.parseInt(this.npTxt.getText());
                double pr = Double.parseDouble(this.prcTxt.getText());
                int idEv=NReservacion.BuscarEvento(fch,desc,salon,np,pr);
                rpta2=NEvento.Editar(idEv,fch,salon,np, desc,pr,idTem, idTip, idEstE);
                String Clt=this.CltCmb.getSelectedItem().toString();
                String[] split=Clt.split(" ");
                int idC = NReservacion.BuscarCliente(split[0], split[1]);
                int idEstR=NReservacion.BuscarEstadoReservacion("Completado");
                int idR = NReservacion.BuscarIdReservacion(idEv, fch, idC);
                
                rpta = NReservacion.Editar(idR,fch,
                        desc,
                        pr, idEv,
                        idC, idEstR);
                if (rpta.equals("OK")&&rpta2.equals("OK")){
                    JOptionPane.showMessageDialog(new JFrame(),"Editado con exito...");
                    this.fchDate.setDateFormatString("yyyy-MM-dd");
                    this.descTxt.setText("");
                    this.prcTxt.setText("");
                    this.salTxt.setText("");
                    this.npTxt.setText("");
                    this.CltCmb.setSelectedIndex(0);
                    this.teCmb.setSelectedIndex(0);
                    this.temCmb.setSelectedIndex(0);
                    DefaultTableModel model = (DefaultTableModel)this.itmTbl.getModel();
                    model.setRowCount(0);
                    this.itmTbl.setModel(model);
                    this.CrearBtn.setVisible(true);
                    this.IngBtn.setVisible(false);
                    this.EditBtn.setVisible(true);
                    this.ElimBtn.setVisible(true);
                    this.SaveBtn.setVisible(false);
                }
                else{
                    JOptionPane.showMessageDialog(new JFrame(),rpta);
                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        else{
            String rpta="";
            String rpta2="";
            try {
                String desc=this.descTxt.getText();
                int idTem = NEvento.BuscarTematicaNombre(this.temCmb.getSelectedItem().toString());
                int idTip = NEvento.BuscarTipoNombre(this.teCmb.getSelectedItem().toString());
                int idEstE = NEvento.BuscarEstadoNombre("Activado");
                int an = this.fchDate.getDate().getYear()+1900;
                int mon=this.fchDate.getDate().getMonth()+1;
                int day =this.fchDate.getDate().getDate();
                String fch = ""+an+"-0"+mon+"-"+day;
                String salon=this.salTxt.getText();
                int np = Integer.parseInt(this.npTxt.getText());
                double pr = Double.parseDouble(this.prcTxt.getText());
                int idEv=NReservacion.BuscarEvento(fch,desc,salon,np,pr);
                rpta2=NEvento.Editar(idEv,fch,salon,np, desc,pr,idTem, idTip, idEstE);
                String Clt=this.CltCmb.getSelectedItem().toString();
                String[] split=Clt.split(" ");
                int idC = NReservacion.BuscarCliente(split[0], split[1]);
                int idEstR=NReservacion.BuscarEstadoReservacion("Activado");
                int idR = NReservacion.BuscarIdReservacion(idEv, fch, idC);
                
                rpta = NReservacion.Editar(idR,fch,
                        desc,
                        pr, idEv,
                        idC, idEstR);
                if (rpta.equals("OK")&&rpta2.equals("OK")){
                    JOptionPane.showMessageDialog(new JFrame(),"Editado con exito...");
                    this.fchDate.setDateFormatString("yyyy-MM-dd");
                    this.descTxt.setText("");
                    this.prcTxt.setText("");
                    this.salTxt.setText("");
                    this.npTxt.setText("");
                    this.CltCmb.setSelectedIndex(0);
                    this.teCmb.setSelectedIndex(0);
                    this.temCmb.setSelectedIndex(0);
                    DefaultTableModel model = (DefaultTableModel)this.itmTbl.getModel();
                    model.setRowCount(0);
                    this.itmTbl.setModel(model);
                    this.CrearBtn.setVisible(true);
                    this.IngBtn.setVisible(false);
                    this.EditBtn.setVisible(true);
                    this.ElimBtn.setVisible(true);
                    this.SaveBtn.setVisible(false);
                }
                else{
                    JOptionPane.showMessageDialog(new JFrame(),rpta);
                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    
    protected void SaveAct(){
        
        String rpta="";
        String rpta2="";
        try {
            String desc=this.descTxt.getText();
            int idTem = NEvento.BuscarTematicaNombre(this.temCmb.getSelectedItem().toString());
            int idTip = NEvento.BuscarTipoNombre(this.teCmb.getSelectedItem().toString());
            int idEstE = NEvento.BuscarEstadoNombre("Activado");
            int an = this.fchDate.getDate().getYear()+1900;
            int mon=this.fchDate.getDate().getMonth()+1;
            int day =this.fchDate.getDate().getDate();
            String fch = ""+an+"-0"+mon+"-"+day;
            String salon=this.salTxt.getText();
            int np = Integer.parseInt(this.npTxt.getText());
            double pr = Double.parseDouble(this.prcTxt.getText());
            int idEv=NReservacion.BuscarEvento(fch,desc,salon,np,pr);
            rpta2=NEvento.Editar(idEv,fch,salon,np, desc,pr,idTem, idTip, idEstE);
            String Clt=this.CltCmb.getSelectedItem().toString();
            String[] split=Clt.split(" ");
            int idC = NReservacion.BuscarCliente(split[0], split[1]);
            int idEstR=NReservacion.BuscarEstadoReservacion("Activado");
            int idR = NReservacion.BuscarIdReservacion(idEv, fch, idC);
            
            rpta = NReservacion.Editar(idR,fch,
                    desc,
                    pr, idEv,
                    idC, idEstR);
            if (rpta.equals("OK")&&rpta2.equals("OK")){
                JOptionPane.showMessageDialog(new JFrame(),"Editado con exito...");
                this.fchDate.setDateFormatString("yyyy-MM-dd");
                this.descTxt.setText("");
                this.prcTxt.setText("");
                this.salTxt.setText("");
                this.npTxt.setText("");
                this.CltCmb.setSelectedIndex(0);
                this.teCmb.setSelectedIndex(0);
                this.temCmb.setSelectedIndex(0);
                DefaultTableModel model = (DefaultTableModel)this.itmTbl.getModel();
                model.setRowCount(0);
                this.itmTbl.setModel(model);
                this.CrearBtn.setVisible(true);
                this.IngBtn.setVisible(false);
                this.EditBtn.setVisible(true);
                this.ElimBtn.setVisible(true);
                this.SaveBtn.setVisible(false);
            }
            else{
                JOptionPane.showMessageDialog(new JFrame(),rpta);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
        GetDataActivos();
    }
    
    protected void GetDataActivos(){
        ResultSet rs = null;
        DefaultTableModel model=null;
        
        try {
            
            rs = new NReservacion().MostrarActivos();
            if(this.rsrTbl.getRowCount()!=0){
                model = (DefaultTableModel)this.rsrTbl.getModel();
                model.setRowCount(0);
            }
            
            model = (DefaultTableModel)this.rsrTbl.getModel();
            
            while(rs.next()){
                model.addRow( new Object[] {rs.getString("fecha"),
                    rs.getString("nombres")+" "+rs.getString("apellidos"),
                    rs.getString("descripcion"),rs.getDouble("costo") });
            }
            this.rsrTbl.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    protected void GetDataCompletados(){
        ResultSet rs = null;
        DefaultTableModel model=null;
        
        try {
            
            rs = new NReservacion().MostrarCompletados();
            if(this.rsrTbl.getRowCount()!=0){
                model = (DefaultTableModel)this.rsrTbl.getModel();
                model.setRowCount(0);
            }
            
            model = (DefaultTableModel)this.rsrTbl.getModel();
            
            while(rs.next()){
                model.addRow( new Object[] {rs.getString("fecha"),
                    rs.getString("nombres")+" "+rs.getString("apellidos"),
                    rs.getString("descripcion"),rs.getDouble("costo") });
            }
            this.rsrTbl.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    protected void GetDataCancelados(){
        ResultSet rs = null;
        DefaultTableModel model=null;
        
        try {
            
            rs = new NReservacion().MostrarCancelados();
            if(this.rsrTbl.getRowCount()!=0){
                model = (DefaultTableModel)this.rsrTbl.getModel();
                model.setRowCount(0);
            }
            
            model = (DefaultTableModel)this.rsrTbl.getModel();
            
            while(rs.next()){
                model.addRow( new Object[] {rs.getString("fecha"),
                    rs.getString("nombres")+" "+rs.getString("apellidos"),
                    rs.getString("descripcion"),rs.getDouble("costo") });
            }
            this.rsrTbl.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    protected void DeleteData(){
        String rpta="";
        String rpta2="";
        try {
            String desc=this.descTxt.getText();
            int idTem = NEvento.BuscarTematicaNombre(this.temCmb.getSelectedItem().toString());
            int idTip = NEvento.BuscarTipoNombre(this.teCmb.getSelectedItem().toString());
            int idEstE = NEvento.BuscarEstadoNombre("Cancelado");
            int an = this.fchDate.getDate().getYear()+1900;
            int mon=this.fchDate.getDate().getMonth()+1;
            int day =this.fchDate.getDate().getDate();
            String fch = ""+an+"-0"+mon+"-"+day;
            String salon=this.salTxt.getText();
            int np = Integer.parseInt(this.npTxt.getText());
            double pr = Double.parseDouble(this.prcTxt.getText());
            int idEv=NReservacion.BuscarEvento(fch,desc,salon,np,pr);
            rpta2=NEvento.Editar(idEv,fch,salon,np, desc,pr,idTem, idTip, idEstE);
            String Clt=this.CltCmb.getSelectedItem().toString();
            String[] split=Clt.split(" ");
            int idC = NReservacion.BuscarCliente(split[0], split[1]);
            int idEstR=NReservacion.BuscarEstadoReservacion("Cancelado");
            int idR = NReservacion.BuscarIdReservacion(idEv, fch, idC);
            
            rpta = NReservacion.Editar(idR,fch,
                    desc,
                    pr, idEv,
                    idC, idEstR);
            if (rpta.equals("OK")&&rpta2.equals("OK")){
                JOptionPane.showMessageDialog(new JFrame(),"Editado con exito...");
                this.fchDate.setDateFormatString("yyyy-MM-dd");
                this.descTxt.setText("");
                this.prcTxt.setText("");
                this.salTxt.setText("");
                this.npTxt.setText("");
                this.CltCmb.setSelectedIndex(0);
                this.teCmb.setSelectedIndex(0);
                this.temCmb.setSelectedIndex(0);
                DefaultTableModel model = (DefaultTableModel)this.itmTbl.getModel();
                model.setRowCount(0);
                this.itmTbl.setModel(model);
                this.CrearBtn.setVisible(true);
                this.IngBtn.setVisible(false);
                this.EditBtn.setVisible(true);
                this.ElimBtn.setVisible(true);
                this.SaveBtn.setVisible(false);
            }
            else{
                JOptionPane.showMessageDialog(new JFrame(),rpta);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    protected void GetDataClientes(){
        ResultSet rs = null;
        DefaultTableModel model=null;
        
        try {
            
            rs = new NReservacion().MostrarClientes();
            if(this.CltCmb.getItemCount()==2){
                
            }
            
            
            
            while(rs.next()){
                
                this.CltCmb.addItem(rs.getString(1)+" "+rs.getString(2));
            }
            //this.empTbl.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    protected void GetDataTematicas(){
        ResultSet rs = null;
        DefaultTableModel model=null;
        
        try {
            
            rs = new NEvento().MostrarTematicasNombres();
            if(this.temCmb.getItemCount()==2){
                
            }
            
            
            
            while(rs.next()){
                
                this.temCmb.addItem(rs.getString(1));
            }
            //this.empTbl.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    protected void GetDataTipos(){
        ResultSet rs = null;
        DefaultTableModel model=null;
        
        try {
            
            rs = new NReservacion().MostrarTipos();
            if(this.teCmb.getItemCount()==2){
                
            }
            
            
            
            while(rs.next()){
                
                this.teCmb.addItem(rs.getString(1));
            }
            //this.empTbl.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelBtn;
    private javax.swing.JComboBox CltCmb;
    private javax.swing.JButton CrearBtn;
    private javax.swing.JButton EditBtn;
    private javax.swing.JButton ElimBtn;
    private javax.swing.JButton IngBtn;
    private javax.swing.JButton SaveBtn;
    private javax.swing.JButton agrBtn;
    private javax.swing.JCheckBox comChck;
    private javax.swing.JTextArea descTxt;
    private com.toedter.calendar.JDateChooser fchDate;
    private javax.swing.JComboBox fltrCmb;
    private javax.swing.JTable itmTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField npTxt;
    private javax.swing.JTextField prcTxt;
    private javax.swing.JTable rsrTbl;
    private javax.swing.JTextField salTxt;
    private javax.swing.JComboBox teCmb;
    private javax.swing.JComboBox temCmb;
    // End of variables declaration//GEN-END:variables
    
    public JComboBox getCltCmb() {
        return CltCmb;
    }
    
    public void setCltCmb(JComboBox CltCmb) {
        this.CltCmb = CltCmb;
    }
    
    public JComboBox getTeCmb() {
        return teCmb;
    }
    
    public void setTeCmb(JComboBox teCmb) {
        this.teCmb = teCmb;
    }
    
    public JComboBox getTemCmb() {
        return temCmb;
    }
    
    public void setTemCmb(JComboBox temCmb) {
        this.temCmb = temCmb;
    }
    
    
}
