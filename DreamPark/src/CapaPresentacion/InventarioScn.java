/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CapaPresentacion;
import CapaDatos.DInventario;
import CapaNegocios.NInventario;
import javax.swing.DefaultListModel;
import java.sql.*;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author lhtc9
 */
public class InventarioScn extends javax.swing.JFrame {

    /**
     * Creates new form InventarioScn
     */
    public InventarioScn() {
        initComponents();
        this.ingCmp.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        crearCompra = new javax.swing.JButton();
        actualiza = new javax.swing.JButton();
        ingCmp = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nombCmp = new javax.swing.JTextField();
        cantCmp = new javax.swing.JTextField();
        pCmp = new javax.swing.JTextField();
        pVta = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        edit = new javax.swing.JButton();
        guarda = new javax.swing.JButton();
        elimina = new javax.swing.JButton();
        cancela = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("COMPRAS");

        crearCompra.setText("CREAR");
        crearCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearCompraActionPerformed(evt);
            }
        });

        actualiza.setText("ACTUALIZAR");

        ingCmp.setText("INGRESAR");
        ingCmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingCmpActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre");

        jLabel3.setText("Cantidad");

        nombCmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombCmpActionPerformed(evt);
            }
        });
        nombCmp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombCmpKeyTyped(evt);
            }
        });

        cantCmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantCmpActionPerformed(evt);
            }
        });
        cantCmp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantCmpKeyTyped(evt);
            }
        });

        jLabel6.setText("Precio Compra");

        jLabel7.setText("Precio Venta");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Nombre", "Cantidad", "Precio Compra", "Precio Venta"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setMinWidth(0);
            tabla.getColumnModel().getColumn(0).setPreferredWidth(0);
            tabla.getColumnModel().getColumn(0).setMaxWidth(0);
            tabla.getColumnModel().getColumn(1).setResizable(false);
            tabla.getColumnModel().getColumn(2).setResizable(false);
            tabla.getColumnModel().getColumn(3).setResizable(false);
            tabla.getColumnModel().getColumn(4).setResizable(false);
        }

        edit.setText("Editar");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        guarda.setText("Guardar");

        elimina.setText("Eliminar");

        cancela.setText("Cancelar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(pVta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                        .addComponent(pCmp, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cantCmp, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(nombCmp, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(crearCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(ingCmp, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(edit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(guarda)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(elimina)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancela)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(actualiza))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(309, 309, 309)
                        .addComponent(jLabel1)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crearCompra)
                    .addComponent(edit)
                    .addComponent(actualiza)
                    .addComponent(guarda)
                    .addComponent(elimina)
                    .addComponent(cancela))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nombCmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cantCmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pCmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pVta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ingCmp))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void crearCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearCompraActionPerformed
        this.ingCmp.setVisible(true);
        this.nombCmp.enable(true);
        this.cantCmp.enable(true);
        this.pCmp.enable(true);
        this.pVta.enable(true);
        this.crearCompra.setVisible(false);
        this.cancela.setVisible(true);
        this.nombCmp.setText("");
        this.cantCmp.setText("");
        this.pCmp.setText("");
        this.pVta.setText("");
    }//GEN-LAST:event_crearCompraActionPerformed

    private void cantCmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantCmpActionPerformed
        // TODO add your handling code here:        
    }//GEN-LAST:event_cantCmpActionPerformed

    private void ingCmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingCmpActionPerformed
        PushData();        
        this.nombCmp.enable(false);
        this.cantCmp.enable(false);
        this.pCmp.enable(false);
        this.pCmp.enable(false);
        if(this.crearCompra.isEnabled()){
            this.cancela.setVisible(false);
        }
        else{
            this.cancela.setVisible(true);
        }
    }//GEN-LAST:event_ingCmpActionPerformed
    private void BuscBtnActionPerformed(java.awt.event.ActionEvent evt) {
        GetData();
    }
    private void EditBtnActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        this.nombCmp.enable(true);
        this.cantCmp.enable(true);
        this.pCmp.enable(true);
        this.pVta.enable(true);
        this.guarda.setVisible(true);
        this.edit.setVisible(false);
        this.elimina.setVisible(false);
    }  
    private void SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        SaveData();
        this.edit.setVisible(false);
        this.elimina.setVisible(false);
        this.cancela.setVisible(false);
        this.crearCompra.setVisible(true);
    }
    private void ElimBtnActionPerformed(java.awt.event.ActionEvent evt) {                                        
        DeleteData();
        this.edit.setVisible(false);
        this.elimina.setVisible(false);
        this.cancela.setVisible(false);
        this.crearCompra.setVisible(true);
    } 
    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        boolean flag=true;
        if(this.ingCmp.isVisible()&&!this.crearCompra.isVisible()&&!this.edit.isVisible()&&!this.elimina.isVisible()){
            this.crearCompra.setVisible(true);
            this.ingCmp.setVisible(false);
            this.cancela.setVisible(false);
            this.nombCmp.enable(false);
            this.cantCmp.enable(false);
            this.pCmp.enable(false);
            this.pVta.enable(false);
        }
        if(!this.edit.isVisible()&&this.guarda.isVisible()&&!this.elimina.isVisible()){
            this.edit.setVisible(true);
            this.elimina.setVisible(true);
            
            this.nombCmp.enable(false);
            this.cantCmp.enable(false);
            this.pCmp.enable(false);
            this.pVta.enable(false);
            this.guarda.setVisible(false);
            flag=false;
        }
        if(this.edit.isVisible()&&this.elimina.isVisible()&&!this.guarda.isVisible()&&flag){
            this.edit.setVisible(false);
            this.elimina.setVisible(false);
            this.crearCompra.setVisible(true);
            this.cancela.setVisible(false);
            this.nombCmp.setText("");
            this.cantCmp.setText("");
            this.pCmp.setText("");
            this.pVta.setText("");
        }
    }                                         

    private void CompTblMouseClicked(java.awt.event.MouseEvent evt) {                                      
        this.crearCompra.setVisible(false);
        this.edit.setVisible(true);
        this.elimina.setVisible(true);
        this.cancela.setVisible(true);
        int index = this.tabla.convertRowIndexToModel(this.tabla.getSelectedRow());
        this.nombCmp.setText((String)this.tabla.getModel().getValueAt(index, 1)); 
        this.cantCmp.setText((String)this.tabla.getModel().getValueAt(index, 2));
        this.pCmp.setText((String)this.tabla.getModel().getValueAt(index, 3));
        this.pVta.setText((String)this.tabla.getModel().getValueAt(index, 3));
    } 
    
    private void nombCmpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombCmpKeyTyped
        char c =evt.getKeyChar();
        if((c<'a'||c>'z')&&(c<'A'||c>'Z') &&(c!=' ')) evt.consume();
        if(nombCmp.getText().length()==15) evt.consume();
    }//GEN-LAST:event_nombCmpKeyTyped

    private void cantCmpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantCmpKeyTyped
        char c =evt.getKeyChar();
        if(c<'0'||c>'9') evt.consume();
        if (cantCmp.getText().length()== 8) evt.consume();
    }//GEN-LAST:event_cantCmpKeyTyped

    private void nombCmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombCmpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombCmpActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventarioScn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventarioScn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventarioScn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventarioScn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventarioScn().setVisible(true);
            }
        });
    }
    public void DeleteData(){
        int index = this.tabla.convertRowIndexToModel(this.tabla.getSelectedRow());
        String rpta="";
        try {
            //int i=Integer.parseInt(this.tabla.getModel().getValueAt(index, 0).toString());
            rpta = NInventario.Eliminar(Integer.parseInt(this.tabla.getModel().getValueAt(index, 0).toString()),this.nombCmp.getText(), this.cantCmp.getText(), this.pCmp.getText(),this.pVta.getText());
            if (rpta.equals("OK")){
                    JOptionPane.showMessageDialog(new JFrame(),"Eliminado con exito...");
                    this.nombCmp.setText("");
                    this.cantCmp.setText("");
                    this.pCmp.setText("");
                    this.pVta.setText("");
                    this.nombCmp.enable(false);
                    this.cantCmp.enable(false);
                    this.pCmp.enable(false);
                    this.pVta.enable(false);
                }
                else{
                    JOptionPane.showMessageDialog(new JFrame(),rpta);

                }
        } catch (SQLException ex) {
            Logger.getLogger(InventarioScn.class.getName()).log(Level.SEVERE, null, ex);
        }
        GetData();
    }
    
    public void SaveData(){
        int index = this.tabla.convertRowIndexToModel(this.tabla.getSelectedRow());
        String rpta="";
        try {
            //int i=Integer.parseInt(this.tabla.getModel().getValueAt(index, 0).toString());
            rpta = NInventario.Editar(Integer.parseInt(this.tabla.getModel().getValueAt(index, 0).toString()),this.nombCmp.getText(), this.cantCmp.getText(), this.pCmp.getText(),this.pVta.getText());
            if (rpta.equals("OK")){
                    JOptionPane.showMessageDialog(new JFrame(),"Editado con exito...");
                    this.nombCmp.setText("");
                    this.cantCmp.setText("");
                    this.pCmp.setText("");
                    this.pVta.setText("");
                    this.nombCmp.enable(false);
                    this.cantCmp.enable(false);
                    this.pCmp.enable(false);
                    this.pVta.enable(false);
                    this.edit.setVisible(true);
                    this.elimina.setVisible(true);
                    this.guarda.setVisible(false);
                }
                else{
                    JOptionPane.showMessageDialog(new JFrame(),rpta);

                }
        } catch (SQLException ex) {
            Logger.getLogger(InventarioScn.class.getName()).log(Level.SEVERE, null, ex);
        }
        GetData();
    }
    
   
    
    public void GetData(){
         ResultSet rs = null;
        DefaultTableModel model=null;
       
        try {
            
            rs = new NInventario().Mostrar();
            if(this.tabla.getRowCount()!=0){
                 model = (DefaultTableModel)this.tabla.getModel();
                model.setRowCount(0);
            }
            
            model = (DefaultTableModel)this.tabla.getModel();
            
            while(rs.next()){
                model.addRow( new Object[] {rs.getInt("idInventario"), rs.getString("nombre"), rs.getString("cantidad"), rs.getString("pCmp"), rs.getString("pVta") });
            }
            this.tabla.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(InventarioScn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void PushData(){
        try{
            String rpta="";
            if((this.cantCmp.getText().equals(""))||(this.pVta.getText().equals(""))||(this.pCmp.getText().equals(""))||(this.nombCmp.getText().equals(""))){
                if(this.cantCmp.getText().equals("")){
                    JOptionPane.showMessageDialog(new JFrame(),"No ha ingresado datos en el campo Cantidad. Vuelva a intentar","Error",JOptionPane.ERROR_MESSAGE);

                }
                if(this.pCmp.getText().equals("")){
                    JOptionPane.showMessageDialog(new JFrame(),"No ha ingresado datos en el campo Precio Compra. Vuelva a intentar","Error",JOptionPane.ERROR_MESSAGE);

                }
                if(this.pVta.getText().equals("")){
                    JOptionPane.showMessageDialog(new JFrame(),"No ha ingresado datos en el campo Precio Venta. Vuelva a intentar","Error",JOptionPane.ERROR_MESSAGE);

                }
                if(this.nombCmp.getText().equals("")){
                    JOptionPane.showMessageDialog(new JFrame(),"No ha ingresado datos en el campo Nombre. Vuelva a intentar","Error",JOptionPane.ERROR_MESSAGE);

                }
            }
           else{
                rpta = NInventario.insertar(this.nombCmp.getText(), this.cantCmp.getText(), this.pCmp.getText(),this.pVta.getText());
                if (rpta.equals("OK")){
                    JOptionPane.showMessageDialog(new JFrame(),"Ingresado con exito...");
                    this.nombCmp.setText("");
                    this.cantCmp.setText("");
                    this.pCmp.setText("");
                    this.pVta.setText("");
                    this.crearCompra.setVisible(true);
                    this.ingCmp.setVisible(false);
                    this.nombCmp.enable(true);
                    this.cantCmp.enable(true);
                    this.pCmp.enable(true);
                    this.pVta.enable(true);
                }
                else{
                    JOptionPane.showMessageDialog(new JFrame(),rpta);

                }
                
                
            }
            
        }
        catch(Exception e){
                   JOptionPane.showMessageDialog(new JFrame(),e.getMessage()+e.getStackTrace());

        }
        GetData();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualiza;
    private javax.swing.JButton cancela;
    private javax.swing.JTextField cantCmp;
    private javax.swing.JButton crearCompra;
    private javax.swing.JButton edit;
    private javax.swing.JButton elimina;
    private javax.swing.JButton guarda;
    private javax.swing.JButton ingCmp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombCmp;
    private javax.swing.JTextField pCmp;
    private javax.swing.JTextField pVta;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
