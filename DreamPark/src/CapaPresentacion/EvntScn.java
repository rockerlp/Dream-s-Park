/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package CapaPresentacion;

import CapaNegocios.NEvento;
import CapaNegocios.NReservacion;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jfpal
 */
public class EvntScn extends javax.swing.JFrame {
    
    /**
     * Creates new form EvntScn
     */
    public EvntScn() {
        initComponents();
        
        this.SaveBtn.setVisible(false);
        this.ElimBtn.setVisible(false);
        this.EditBtn.setVisible(false);
        this.CancelBtn.setVisible(false);
        this.agrBtn.setVisible(false);
        GetDataClientes();
        GetDataActivos();
        
        GetDataTematicas();
        GetDataTipos();
        this.fchDate.setDateFormatString("yyyy-MM-dd");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fchDate = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        evntTbl = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        fltrCmb = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descTxt = new javax.swing.JTextArea();
        salTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        prcTxt = new javax.swing.JTextField();
        npTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        teCmb = new javax.swing.JComboBox();
        CltCmb = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        itmTbl = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        agrBtn = new javax.swing.JButton();
        EditBtn = new javax.swing.JButton();
        SaveBtn = new javax.swing.JButton();
        ElimBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        temCmb = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(769, 658));
        setResizable(false);

        fchDate.setEnabled(false);

        jLabel1.setText("EVENTOS");

        evntTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Cliente", "Descripcion", "Costo", "Personas", "Salon", "Tematica", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        evntTbl.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        evntTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                evntTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(evntTbl);
        if (evntTbl.getColumnModel().getColumnCount() > 0) {
            evntTbl.getColumnModel().getColumn(0).setResizable(false);
            evntTbl.getColumnModel().getColumn(3).setResizable(false);
            evntTbl.getColumnModel().getColumn(4).setResizable(false);
            evntTbl.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel2.setText("Fecha");

        fltrCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Activos", "Completados", "Cancelados" }));
        fltrCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fltrCmbActionPerformed(evt);
            }
        });

        jLabel3.setText("Filtrar");

        jLabel4.setText("Descripcion");

        jLabel9.setText("Salon");

        jScrollPane2.setEnabled(false);

        descTxt.setColumns(20);
        descTxt.setRows(5);
        descTxt.setEnabled(false);
        jScrollPane2.setViewportView(descTxt);

        salTxt.setEnabled(false);

        jLabel5.setText("Precio");

        jLabel10.setText("Numero de personas:");

        prcTxt.setEnabled(false);

        npTxt.setEnabled(false);

        jLabel7.setText("Tipo de Evento");

        teCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "<Editar>" }));
        teCmb.setEnabled(false);
        teCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teCmbActionPerformed(evt);
            }
        });

        CltCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "<Editar>" }));
        CltCmb.setEnabled(false);
        CltCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CltCmbActionPerformed(evt);
            }
        });

        itmTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Descripcion", "Tipo", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(itmTbl);

        jLabel8.setText("Items");

        agrBtn.setText("Agregar");

        EditBtn.setText("EDITAR");
        EditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditBtnActionPerformed(evt);
            }
        });

        SaveBtn.setText("GUARDAR");
        SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBtnActionPerformed(evt);
            }
        });

        ElimBtn.setText("CANCELAR");
        ElimBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ElimBtnActionPerformed(evt);
            }
        });

        CancelBtn.setText("REGRESAR");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        jLabel11.setText("Tematica");

        temCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "<Editar>" }));
        temCmb.setEnabled(false);
        temCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temCmbActionPerformed(evt);
            }
        });

        jLabel6.setText("Cliente");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fltrCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(npTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(salTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(prcTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel4))
                                    .addGap(13, 13, 13)
                                    .addComponent(fchDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(agrBtn))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addGap(89, 89, 89)
                                    .addComponent(temCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(103, 103, 103)
                                .addComponent(CltCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(EditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ElimBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CancelBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SaveBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(teCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(324, 324, 324)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fchDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(prcTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(salTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(npTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fltrCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(CltCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(teCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(temCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(agrBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SaveBtn)
                            .addComponent(EditBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CancelBtn)
                            .addComponent(ElimBtn))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void EditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBtnActionPerformed
        // TODO add your handling code here:
        this.fchDate.setEnabled(true);
        this.descTxt.enable(true);
        this.prcTxt.enable(true);
        this.salTxt.enable(true);
        this.npTxt.enable(true);
        this.CltCmb.enable(true);
        this.teCmb.enable(true);
        this.temCmb.enable(true);
        this.agrBtn.setVisible(true);
        this.itmTbl.enable(true);
        this.SaveBtn.setVisible(true);
        this.EditBtn.setVisible(false);
        this.ElimBtn.setVisible(false);
    }//GEN-LAST:event_EditBtnActionPerformed
    
    private void SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBtnActionPerformed
        // TODO add your handling code here:
        SaveData();
        this.EditBtn.setVisible(false);
        this.ElimBtn.setVisible(false);
        this.CancelBtn.setVisible(false);
        this.fchDate.setDateFormatString("yyyy-MM-dd");
        this.fchDate.setEnabled(false);
        this.descTxt.enable(false);
        this.prcTxt.enable(false);
        this.salTxt.enable(false);
        this.npTxt.enable(false);
        this.CltCmb.enable(false);
        this.teCmb.enable(false);
        this.temCmb.enable(false);
        this.agrBtn.setVisible(false);
        this.itmTbl.enable(false);
        DefaultTableModel model = (DefaultTableModel)this.itmTbl.getModel();
        model.setRowCount(0);
        this.itmTbl.setModel(model);
    }//GEN-LAST:event_SaveBtnActionPerformed
    
    private void ElimBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ElimBtnActionPerformed
        //DeleteData();
        this.EditBtn.setVisible(false);
        this.ElimBtn.setVisible(false);
        this.CancelBtn.setVisible(false);
        
    }//GEN-LAST:event_ElimBtnActionPerformed
    
    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        // TODO add your handling code here:
        boolean flag=true;
        if(!this.EditBtn.isVisible()&&!this.ElimBtn.isVisible()){
            
            this.CancelBtn.setVisible(false);
            this.fchDate.setEnabled(false);
            this.descTxt.enable(false);
            this.prcTxt.enable(false);
            this.salTxt.enable(false);
            this.npTxt.enable(false);
            this.CltCmb.enable(false);
            this.teCmb.enable(false);
            this.temCmb.enable(false);
            this.agrBtn.setVisible(false);
            this.itmTbl.enable(false);
            this.fchDate.setDateFormatString("yyyy-MM-dd");
        }
        if(!this.EditBtn.isVisible()&&this.SaveBtn.isVisible()&&!this.ElimBtn.isVisible()){
            this.EditBtn.setVisible(true);
            this.ElimBtn.setVisible(true);
            this.fchDate.setEnabled(false);
            this.descTxt.enable(false);
            this.prcTxt.enable(false);
            this.salTxt.enable(false);
            this.npTxt.enable(false);
            this.CltCmb.enable(false);
            this.teCmb.enable(false);
            this.temCmb.enable(false);
            this.agrBtn.setVisible(false);
            this.itmTbl.enable(false);
            this.SaveBtn.setVisible(false);
            this.fchDate.setDateFormatString("yyyy-MM-dd");
            flag=false;
        }
        if(this.EditBtn.isVisible()&&this.ElimBtn.isVisible()&&!this.SaveBtn.isVisible()&&flag){
            this.EditBtn.setVisible(false);
            this.ElimBtn.setVisible(false);
            this.fchDate.setEnabled(false);
            this.CancelBtn.setVisible(false);
            this.fchDate.setDateFormatString("");
            this.descTxt.setText("");
            this.prcTxt.setText("");
            this.salTxt.setText("");
            this.npTxt.setText("");
            this.CltCmb.setSelectedIndex(0);
            this.teCmb.setSelectedIndex(0);
            this.temCmb.setSelectedIndex(0);
            this.agrBtn.setVisible(false);
            DefaultTableModel model = (DefaultTableModel)this.itmTbl.getModel();
            model.setRowCount(0);
            this.itmTbl.setModel(model);
            this.fchDate.setDateFormatString("yyyy-MM-dd");
        }
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void evntTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_evntTblMouseClicked
        // TODO add your handling code here:
        //this.CrearBtn.setVisible(false);
        ResultSet rs = null;
        
        Date date = null;
        
        if(this.fltrCmb.getSelectedItem().equals("Cancelados")
                ||this.fltrCmb.getSelectedItem().equals("Completados")){
            this.EditBtn.setVisible(false);
            this.ElimBtn.setVisible(false);
            this.CancelBtn.setVisible(false);
        }
        else{
            this.EditBtn.setVisible(true);
            this.ElimBtn.setVisible(true);
            this.CancelBtn.setVisible(true);
        }
        
        int index = this.evntTbl.convertRowIndexToModel(this.evntTbl.getSelectedRow());
        DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        try {
            date = formatter.parse((String)this.evntTbl.getModel().getValueAt(index, 0));
        } catch (ParseException ex) {
            Logger.getLogger(RsrvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.fchDate.setDate(date);
        this.descTxt.setText((String)this.evntTbl.getModel().getValueAt(index, 2));
        this.prcTxt.setText(""+this.evntTbl.getModel().getValueAt(index, 3));
        
        ComboBoxModel cmbmodel = this.CltCmb.getModel();
        int size = cmbmodel.getSize();
        for(int i=0;i<size;i++) {
            Object element = cmbmodel.getElementAt(i);
            if(element.equals(this.evntTbl.getModel().getValueAt(index, 1))){
                this.CltCmb.setSelectedIndex(i);
            }
        }
        try {
            String client = (String)this.evntTbl.getModel().getValueAt(index, 1);
            String[] split =client.split(" ");
            String fech=(String)this.evntTbl.getModel().getValueAt(index, 0);
            rs = new NReservacion().InfoEvento(fech, split[0], split[1]);
            
            
            if(rs.next()){
                
                String pr = rs.getString("salon");
                this.salTxt.setText(pr);
                this.npTxt.setText(String.valueOf(rs.getInt("numero")));
                ComboBoxModel cmbmodel2 = this.temCmb.getModel();
                ComboBoxModel cmbmodel3 = this.teCmb.getModel();
                int size2 = cmbmodel2.getSize();
                int size3 = cmbmodel3.getSize();
                for(int i=0;i<size2;i++) {
                    Object element = cmbmodel2.getElementAt(i);
                    if(element.equals(rs.getString("tematica"))){
                        this.temCmb.setSelectedIndex(i);
                    } else {
                    }
                }
                for(int i=0;i<size3;i++) {
                    Object element = cmbmodel3.getElementAt(i);
                    if(element.equals(rs.getString("tipo"))){
                        this.teCmb.setSelectedIndex(i);
                    } else {
                    }
                }
            }
            //this.rsrTbl.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_evntTblMouseClicked

    private void CltCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CltCmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CltCmbActionPerformed

    private void teCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teCmbActionPerformed
        // TODO add your handling code here:
        TipoScn tscn = TipoScn.getTpsc();;
        this.teCmb.addActionListener(new ActionListener() {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                JComboBox<String> combo = (JComboBox<String>) e.getSource();
                String selectedBook = (String) combo.getSelectedItem();
                
                if(selectedBook.equals("<Editar>")){
                    
                    tscn.setVisible(true);
                }
            }
        });
    }//GEN-LAST:event_teCmbActionPerformed

    private void temCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temCmbActionPerformed
        // TODO add your handling code here:
        this.temCmb.addActionListener(new ActionListener() {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                JComboBox<String> combo = (JComboBox<String>) e.getSource();
                String selectedBook = (String) combo.getSelectedItem();
                
                if(selectedBook.equals("<Editar>")){
                    TematicaScn tmscn = TematicaScn.getTmsc();
                    tmscn.setVisible(true);
                }
            }
        });
    }//GEN-LAST:event_temCmbActionPerformed

    private void fltrCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fltrCmbActionPerformed
        // TODO add your handling code here:
        this.EditBtn.setVisible(false);
        this.ElimBtn.setVisible(false);
        this.CancelBtn.setVisible(false);
        this.fchDate.setDateFormatString("yyyy-MM-dd");
        this.descTxt.setText("");
        this.prcTxt.setText("");
        this.salTxt.setText("");
        this.npTxt.setText("");
        this.CltCmb.setSelectedIndex(0);
        this.teCmb.setSelectedIndex(0);
        this.temCmb.setSelectedIndex(0);
        this.agrBtn.setVisible(false);
        DefaultTableModel model = (DefaultTableModel)this.itmTbl.getModel();
        model.setRowCount(0);
        this.itmTbl.setModel(model);
        this.fltrCmb.addActionListener(new ActionListener() {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                JComboBox<String> combo = (JComboBox<String>) e.getSource();
                String selectedBook = (String) combo.getSelectedItem();
                
                
                if(selectedBook.equals("Activos")){
                    GetDataActivos();
                    
                    
                }
                if(selectedBook.equals("Completados")){
                    GetDataCompletados();
                }
                if(selectedBook.equals("Cancelados")){
                    GetDataCancelados();
                }
            }
        });
    }//GEN-LAST:event_fltrCmbActionPerformed
            
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EvntScn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EvntScn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EvntScn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EvntScn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EvntScn().setVisible(true);
            }
        });
    }
    
    public void SaveData(){
        int index = this.evntTbl.convertRowIndexToModel(this.evntTbl.getSelectedRow());
        String rpta="";
        String rpta2="";
        try {
            String desc=this.descTxt.getText();
            int idTem = NEvento.BuscarTematicaNombre(this.temCmb.getSelectedItem().toString());
            int idTip = NEvento.BuscarTipoNombre(this.teCmb.getSelectedItem().toString());
            int idEstE = NEvento.BuscarEstadoNombre("Activado");
            int an = this.fchDate.getDate().getYear()+1900;
            int mon=this.fchDate.getDate().getMonth()+1;
            int day =this.fchDate.getDate().getDate();
            String fch = ""+an+"-0"+mon+"-"+day;
            String salon=this.salTxt.getText();
            int np = Integer.parseInt(this.npTxt.getText());
            double pr = Double.parseDouble(this.prcTxt.getText());
            int idEv=NReservacion.BuscarEvento(fch,desc,salon,np,pr);
            rpta2=NEvento.Editar(idEv,fch,salon,np, desc,pr,idTem, idTip, idEstE);
            String Clt=this.CltCmb.getSelectedItem().toString();
            String[] split=Clt.split(" ");
            int idC = NReservacion.BuscarCliente(split[0], split[1]);
            int idEstR=NReservacion.BuscarEstadoReservacion("Activado");
            int idR = NReservacion.BuscarIdReservacion(idEv, fch, idC);
            
            rpta = NReservacion.Editar(idR,fch,
                    desc,
                    pr, idEv,
                    idC, idEstR);
            if (rpta.equals("OK")&&rpta2.equals("OK")){
                JOptionPane.showMessageDialog(new JFrame(),"Editado con exito...");
                this.fchDate.setDateFormatString("yyyy-MM-dd");
                this.descTxt.setText("");
                this.prcTxt.setText("");
                this.salTxt.setText("");
                this.npTxt.setText("");
                this.CltCmb.setSelectedIndex(0);
                this.teCmb.setSelectedIndex(0);
                this.temCmb.setSelectedIndex(0);
                DefaultTableModel model = (DefaultTableModel)this.itmTbl.getModel();
                model.setRowCount(0);
                this.itmTbl.setModel(model);
                this.EditBtn.setVisible(true);
                this.ElimBtn.setVisible(true);
                this.SaveBtn.setVisible(false);
            }
            else{
                JOptionPane.showMessageDialog(new JFrame(),rpta);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
        GetDataActivos();
    }
    
    public void GetDataActivos(){
        ResultSet rs = null;
        DefaultTableModel model=null;
        
        try {
            
            rs = new NEvento().MostrarActivos();
            if(this.evntTbl.getRowCount()!=0){
                model = (DefaultTableModel)this.evntTbl.getModel();
                model.setRowCount(0);
            }
            
            model = (DefaultTableModel)this.evntTbl.getModel();
            
            while(rs.next()){
                model.addRow( new Object[] {rs.getString("fecha"),
                    rs.getString("nombres")+" "+rs.getString("apellidos"),
                    rs.getString("descripcion"),rs.getDouble("costo"),rs.getInt("numPersonas"),
                    rs.getString("salon"), rs.getString("tematica"),
                    rs.getString("tipo")});
            }
            this.evntTbl.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void GetDataCompletados(){
        ResultSet rs = null;
        DefaultTableModel model=null;
        
        try {
            
            rs = new NEvento().MostrarCompletos();
            if(this.evntTbl.getRowCount()!=0){
                model = (DefaultTableModel)this.evntTbl.getModel();
                model.setRowCount(0);
            }
            
            model = (DefaultTableModel)this.evntTbl.getModel();
            
            while(rs.next()){
                model.addRow( new Object[] {rs.getString("fecha"),
                    rs.getString("nombres")+" "+rs.getString("apellidos"),
                    rs.getString("descripcion"),rs.getDouble("costo"),rs.getInt("numPersonas"),
                    rs.getString("salon"), rs.getString("tematica"),
                    rs.getString("tipo") });
            }
            this.evntTbl.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void GetDataCancelados(){
        ResultSet rs = null;
        DefaultTableModel model=null;
        
        try {
            
            rs = new NEvento().MostrarCancelados();
            if(this.evntTbl.getRowCount()!=0){
                model = (DefaultTableModel)this.evntTbl.getModel();
                model.setRowCount(0);
            }
            
            model = (DefaultTableModel)this.evntTbl.getModel();
            
            while(rs.next()){
                model.addRow( new Object[] {rs.getString("fecha"),
                    rs.getString("nombres")+" "+rs.getString("apellidos"),
                    rs.getString("descripcion"),rs.getDouble("costo"),rs.getInt("numPersonas"),
                    rs.getString("salon"), rs.getString("tematica"),
                    rs.getString("tipo") });
            }
            this.evntTbl.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void DeleteData(){
        int index = this.evntTbl.convertRowIndexToModel(this.evntTbl.getSelectedRow());
        String rpta="";
        String rpta2="";
        try {
            int idTem = NEvento.BuscarTematicaNombre(this.temCmb.getSelectedItem().toString());
            int idTip = NEvento.BuscarTipoNombre(this.teCmb.getSelectedItem().toString());
            int idEstE = NEvento.BuscarEstadoNombre("Activado");
            int idEv=NReservacion.BuscarEvento(this.fchDate.getDate().toString(),
                    this.descTxt.getText(),this.salTxt.getText(),
                    Integer.parseInt(this.npTxt.getText()),
                    Double.parseDouble(this.prcTxt.getText()));
            String Clt=this.CltCmb.getSelectedItem().toString();
            String[] split=Clt.split(" ");
            int idC = NReservacion.BuscarCliente(split[0], split[1]);
            int idEstR=NReservacion.BuscarEstadoReservacion("Activado");
            //int i=Integer.parseInt(this.Prov_Tbl.getModel().getValueAt(index, 0).toString());
            rpta2=NEvento.Eliminar(idEv,this.fchDate.getDate().toString(),
                    this.salTxt.getText(),
                    Integer.parseInt(this.npTxt.getText()),
                    this.descTxt.getText() ,
                    Double.parseDouble(this.prcTxt.toString()),
                    idTem, idTip, idEstE);
            rpta = NReservacion.Eliminar(Integer.parseInt(this.evntTbl.getModel().getValueAt(index, 0).toString())
                    ,this.fchDate.getDate().toString(), this.descTxt.getText(), Double.parseDouble(this.prcTxt.toString()),
                    idEv,idC,idEstR );
             if (rpta.equals("OK")&&rpta2.equals("OK")){
                JOptionPane.showMessageDialog(new JFrame(),"Editado con exito...");
                this.fchDate.setDateFormatString("yyyy-MM-dd");
                this.descTxt.setText("");
                this.prcTxt.setText("");
                this.salTxt.setText("");
                this.npTxt.setText("");
                this.CltCmb.setSelectedIndex(0);
                this.teCmb.setSelectedIndex(0);
                this.temCmb.setSelectedIndex(0);
                DefaultTableModel model = (DefaultTableModel)this.itmTbl.getModel();
                model.setRowCount(0);
                this.itmTbl.setModel(model);
                
                this.EditBtn.setVisible(true);
                this.ElimBtn.setVisible(true);
                this.SaveBtn.setVisible(false);
            }
            else{
                JOptionPane.showMessageDialog(new JFrame(),rpta);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
        GetDataActivos();
    }
    
    public void GetDataClientes(){
         ResultSet rs = null;
        DefaultTableModel model=null;
        
        try {
            
            rs = new NReservacion().MostrarClientes();
            if(this.CltCmb.getItemCount()==2){
                
            }
            
            
            
            while(rs.next()){
                
                this.CltCmb.addItem(rs.getString(1)+" "+rs.getString(2));
            }
            //this.empTbl.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void GetDataTematicas(){
         ResultSet rs = null;
        DefaultTableModel model=null;
        
        try {
            
            rs = new NEvento().MostrarTematicasNombres();
            if(this.temCmb.getItemCount()==2){
                
            }
            
            
            
            while(rs.next()){
                
                this.temCmb.addItem(rs.getString(1));
            }
            //this.empTbl.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void GetDataTipos(){
         ResultSet rs = null;
        DefaultTableModel model=null;
        
        try {
            
            rs = new NEvento().MostrarTiposNombres();
            if(this.teCmb.getItemCount()==2){
                
            }
            
            
            
            while(rs.next()){
                
                this.teCmb.addItem(rs.getString(1));
            }
            //this.empTbl.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ProvScn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelBtn;
    private javax.swing.JComboBox CltCmb;
    private javax.swing.JButton EditBtn;
    private javax.swing.JButton ElimBtn;
    private javax.swing.JButton SaveBtn;
    private javax.swing.JButton agrBtn;
    private javax.swing.JTextArea descTxt;
    private javax.swing.JTable evntTbl;
    private com.toedter.calendar.JDateChooser fchDate;
    private javax.swing.JComboBox fltrCmb;
    private javax.swing.JTable itmTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField npTxt;
    private javax.swing.JTextField prcTxt;
    private javax.swing.JTextField salTxt;
    private javax.swing.JComboBox teCmb;
    private javax.swing.JComboBox temCmb;
    // End of variables declaration//GEN-END:variables
}
